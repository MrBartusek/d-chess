"use strict";(()=>{var P=class{constructor(){this.state=new Array(63).fill(null)}getByPosition(t,e){if(t<0||t>7||e<0||e>7)throw new RangeError("x or y argument out of range");return this.state[t+e*8]}getByIndex(t){return this.state[t]}setByPosition(t,e,r){let o=this.getByPosition(t,e);return this.state[t+e*8]=r,o}setByIndex(t,e){let r=this.getByIndex(t);return this.state[t]=e,r}setAll(t){if(t.length!==63)throw new Error("Board must have exactly 63 pieces.");this.state=t}reset(){this.state=new Array(63).fill(null)}};var u=class{constructor(t){this._color=t}get color(){return this._color}onMove(t,e){}};var m=class{};var a=class extends m{constructor(e){super();this.direction=e}computeMoves(e,r){let o=[],i=r;for(;i>=0&&i<=63;){o.push(i);let s=this.calculateStepDiff()+i;if(this.isEdgeCase(i,s))break;i=s;let l=e.getByIndex(i);if(l!=null){let T=e.getByIndex(r);l.color!=T.color&&o.push(i);break}}return o}calculateStepDiff(){switch(this.direction){case"TOP":return-8;case"TOP_RIGHT":return-7;case"RIGHT":return 1;case"BOTTOM_RIGHT":return 9;case"BOTTOM":return 8;case"BOTTOM_LEFT":return 7;case"LEFT":return-1;case"TOP_LEFT":return-9;default:throw new Error("Invalid slide direction")}}isEdgeCase(e,r){let o=Math.floor(e/8),i=Math.floor(r/8);switch(this.direction){case"LEFT":case"RIGHT":return o!==i;case"TOP_LEFT":case"BOTTOM_LEFT":return r%8===7;case"TOP_RIGHT":case"BOTTOM_RIGHT":return r%8===0;default:return!1}}};var p=class extends u{constructor(e){super(e);this._color=e}get type(){return"bishop"}get image(){return`${this.color}Bishop.png`}get materialValue(){return 3}get isKing(){return!1}get moves(){return[new a("TOP_LEFT"),new a("TOP_RIGHT"),new a("BOTTOM_LEFT"),new a("BOTTOM_RIGHT")]}};var n=class extends m{constructor(e,r={}){super();this.step=e;this.options=r}computeMoves(e,r){let o=r+this.step,i=r%8,s=o%8;if(Math.abs(i-s)>2)return[];if(o>=0&&o<=63){let l=this.options.canCapture??!0;if(e.getByIndex(o)!=null&&!l)return[];let T=this.options.onlyCapture??!1;return e.getByIndex(o)==null&&T?[]:[o]}return[]}};var d=class extends u{constructor(e){super(e);this._color=e}get type(){return"king"}get image(){return`${this.color}King.png`}get materialValue(){return 0}get isKing(){return!0}get moves(){return[new n(-9),new n(-8),new n(-7),new n(-1),new n(1),new n(7),new n(8),new n(9)]}};var g=class extends u{constructor(e){super(e);this._color=e}get type(){return"knight"}get image(){return`${this.color}Knight.png`}get materialValue(){return 3}get isKing(){return!1}get moves(){return[new n(17),new n(15),new n(10),new n(6),new n(-17),new n(-15),new n(-10),new n(-6)]}};var b=class extends m{constructor(e){super();this.step=e}computeMoves(e,r){let o=r+this.step,i=r+this.step/2,s=e.getByIndex(i),l=e.getByIndex(o);return s==null&&l==null?[o]:[]}};var B=class extends u{constructor(e){super(e);this._color=e;this.moved=!1}get type(){return"pawn"}get image(){return`${this.color}Pawn.png`}get isKing(){return!1}get moves(){let e=[];return this._color=="white"?(e.push(new n(-8,{canCapture:!1})),e.push(new n(-7,{onlyCapture:!0})),e.push(new n(-9,{onlyCapture:!0})),this.moved||e.push(new b(-16))):(e.push(new n(8,{canCapture:!1})),e.push(new n(7,{onlyCapture:!0})),e.push(new n(9,{onlyCapture:!0})),this.moved||e.push(new b(16))),e}get materialValue(){return 1}onMove(e,r){this.moved=!0}};var h=class extends u{constructor(e){super(e);this._color=e}get type(){return"queen"}get image(){return`${this.color}Queen.png`}get materialValue(){return 9}get isKing(){return!1}get moves(){return[new a("TOP_LEFT"),new a("TOP_RIGHT"),new a("RIGHT"),new a("BOTTOM_RIGHT"),new a("BOTTOM"),new a("BOTTOM_LEFT"),new a("LEFT"),new a("TOP")]}};var f=class extends u{constructor(e){super(e);this._color=e}get type(){return"rook"}get image(){return`${this.color}Rook.png`}get materialValue(){return 5}get isKing(){return!1}get moves(){return[new a("TOP"),new a("RIGHT"),new a("BOTTOM"),new a("LEFT")]}};var w=class{static playMove(){return this.play("move.mp3")}static playCapture(){return this.play("capture.mp3")}static play(t){new Audio(`static/sounds/${t}`).play()}};var E=class{constructor(){this.currentTurn="white";this.state="STARTED";this.board=new P,this.capturedPieces={white:[],black:[]}}setDefaultBoard(){this.board.setByPosition(0,0,new f("black")),this.board.setByPosition(1,0,new g("black")),this.board.setByPosition(2,0,new p("black")),this.board.setByPosition(3,0,new h("black")),this.board.setByPosition(4,0,new d("black")),this.board.setByPosition(5,0,new p("black")),this.board.setByPosition(6,0,new g("black")),this.board.setByPosition(7,0,new f("black")),this.board.setByPosition(0,7,new f("white")),this.board.setByPosition(1,7,new g("white")),this.board.setByPosition(2,7,new p("white")),this.board.setByPosition(3,7,new h("white")),this.board.setByPosition(4,7,new d("white")),this.board.setByPosition(5,7,new p("white")),this.board.setByPosition(6,7,new g("white")),this.board.setByPosition(7,7,new f("white"));let t=8;for(let e=0;e<8;e++)this.board.setByIndex(1*t+e,new B("black")),this.board.setByIndex(6*t+e,new B("white"))}setStalemateTestBoard(){this.board.setByPosition(0,0,new d("black")),this.board.setByPosition(5,1,new h("black")),this.board.setByPosition(6,7,new d("white"))}restart(){this.board.reset(),this.currentTurn="white",this.state="STARTED"}getBoard(){return this.board}getState(){return this.state}getCapturedPieces(){return Object.assign({},this.capturedPieces)}calculateTotalMaterial(t){return this.getCapturedPieces()[t].map(r=>r.materialValue).reduce((r,o)=>r+o,0)}canMakeMove(t,e){if(this.state!="STARTED")return!1;let r=this.board.getByIndex(t);if(!r)throw new Error("Invalid fromTile - field is empty");let o=this.board.getByIndex(e);return t==e||r.color!=this.currentTurn||o&&o.color==r.color||this.isEndgameMove(r,e)?!1:this.computeMoves(t).includes(e)}listMoves(t){return this.computeMoves(t).filter(r=>this.canMakeMove(t,r))}makeMove(t,e){if(!this.canMakeMove(t,e)){console.warn(`Illegal move! ${t} -> ${e}`);return}let r=this.board.getByIndex(t),o=this.board.getByIndex(e);if(o&&o.isKing){console.warn(`Cant capture this piece! ${t} -> ${e}`);return}this.board.setByIndex(t,null),this.board.setByIndex(e,r),o!=null?(w.playCapture(),this.capturedPieces[this.getCurrentTurn()].push(o)):w.playMove(),r.onMove(t,e),r.type=="pawn"&&this.isLastRow(e,r.color)&&this.promotePawn(e),this.currentTurn=this.getNextTurn(),this.updateGameState(),console.log(`Completed move!  ${t} -> ${e}`)}getCurrentTurn(){return this.currentTurn}getNextTurn(){return this.currentTurn=="white"?"black":"white"}computeMoves(t){let e=this.board.getByIndex(t);if(!e)throw new Error("Invalid fromTile - field is empty");return e.moves.flatMap(r=>r.computeMoves(this.board,t))}isLastRow(t,e){let r=Math.floor(t/8);return e=="white"?r==0:r==8}promotePawn(t){let e=this.board.getByIndex(t);if(e?.type!="pawn")throw new Error("Cannot promote non-pawn piece");this.board.setByIndex(t,new h(e.color))}isEndgameMove(t,e){if(!t.isKing)return!1;for(let r=0;r<64;r++){if(e==r)continue;let o=this.board.getByIndex(r);if(!o||o.color==t.color)continue;if(this.computeMoves(r).includes(e))return!0}return!1}updateGameState(){let t={white:!1,black:!1},e={white:!1,black:!1};for(let r=0;r<64;r++){let o=this.board.getByIndex(r);if(!o)continue;let i=this.listMoves(r);for(let s of i){let l=this.board.getByIndex(s);e[o.color]=!0,l&&l.isKing&&(t[l.color]=!0)}}this.currentTurn=="black"?t.white?this.state="BLACK_WIN":e.black||(this.state="STALEMATE"):this.currentTurn=="white"&&(t.black?this.state="WHITE_WIN":e.white||(this.state="STALEMATE"))}};var M=class{drawBoard(t){let e=[];for(let r=0;r<64;r++){let o=t.getByIndex(r),i=document.getElementById(`tile-${r}`),s=this.getPieceElement(i);if(s&&o){if(s.classList.contains(o.type)&&s.classList.contains(o.color)){e.push(s);continue}s.remove()}if(s&&!o)s.remove();else if(o){let l=`static/img/pieces/${o.image}`,T=this.createPiece(l,o.type,o.color);i.appendChild(T),e.push(T)}}return e}generateBoard(t){for(let e=0;e<8;e++){let r=this.createRow(e);t.appendChild(r);for(let o=0;o<8;o++){let i=this.createTile(e,o);if(r.appendChild(i),o==0){let s=this.createNotation(`${e+1}`,"notation-top");i.appendChild(s)}if(e==7){let s=["a","b","c","d","e","f","g","h"],l=this.createNotation(s[o],"notation-bot");i.appendChild(l)}}}}createRow(t){let e=document.createElement("div");return e.classList.add("row"),e.id=`row-${t}`,e}createTile(t,e){let r=document.createElement("div");return r.classList.add("tile"),r.id=`tile-${t*8+e}`,(t+e)%2&&r.classList.add("tile-variant"),r}createNotation(t,e){let r=document.createElement("div");return r.classList.add("notation",e),r.textContent=t,r}createPiece(t,e,r){let o=document.createElement("img");return o.classList.add("piece",e,r),o.src=t,o.draggable=!1,o}getPieceElement(t){let e=t.getElementsByClassName("piece");return e.length>0?e[0]:null}};var y=class{drawPlayers(t){for(let e of["white","black"]){let r=document.getElementById(`${e}-next-move`);r.style.display=t.getCurrentTurn()==e?"inline-block":"none";let o=document.getElementById(`${e}-material-pieces`),i=t.getCapturedPieces()[e];o.replaceChildren(...i.map(this.generateMaterialPiece));let s=document.getElementById(`${e}-material-value`),l=t.calculateTotalMaterial(e);s.innerText=`(${l>0?"+":""}${l})`}}generateMaterialPiece(t){let e=document.createElement("img");return e.src=`static/img/pieces/${t.image}`,e.className="material-piece",e}};var I=class{constructor(t){this.currentDraggedPiece=null;this.dragStartX=0;this.dragStartY=0;this.game=t,this.boardGenerator=new M,this.playerGenerator=new y,this.onMouseMove=this.onMouseMove.bind(this),this.onMouseUp=this.onMouseUp.bind(this),this.onStartDragging=this.onStartDragging.bind(this)}start(){let t=document.getElementById("board");this.boardGenerator.generateBoard(t),this.drawUi(this.game.getBoard())}drawUi(t){this.drawBoard(t),this.playerGenerator.drawPlayers(this.game)}drawBoard(t){let e=this.boardGenerator.drawBoard(t);for(let r of e)r.removeEventListener("mousedown",this.onStartDragging),r.addEventListener("mousedown",this.onStartDragging)}onStartDragging(t){this.currentDraggedPiece=t.target,this.currentDraggedPiece.classList.add("dragged"),this.dragStartX=t.clientX,this.dragStartY=t.clientY;let e=this.getTileFromDraggedPiece(),r=this.game.listMoves(e);for(let o of r)this.addHighlight(o);document.addEventListener("mousemove",this.onMouseMove),document.addEventListener("mouseup",this.onMouseUp)}onMouseMove(t){let e=t.clientX-this.dragStartX,r=t.clientY-this.dragStartY;this.currentDraggedPiece&&(this.currentDraggedPiece.style.transform=`translate(${e}px, ${r}px)`)}onMouseUp(t){if(document.removeEventListener("mousemove",this.onMouseMove),document.removeEventListener("mouseup",this.onMouseUp),this.removeAllHighlights(),this.currentDraggedPiece){let e=this.getTileFromDraggedPiece();this.currentDraggedPiece.style.transform="",this.currentDraggedPiece.classList.remove("dragged"),this.currentDraggedPiece=null;let r=this.getTileFromPoint(t.clientX,t.clientY);if(!r)return;let o=Number(r.id.replace("tile-",""));this.game.makeMove(e,o),this.drawUi(this.game.getBoard()),setTimeout(()=>{this.checkGameState()},100)}}checkGameState(){let t=this.game.getState();t!="STARTED"&&(t=="BLACK_WIN"?alert("Black won!"):t=="WHITE_WIN"?alert("White won!"):t=="STALEMATE"&&alert("Stalemate!"),this.game.restart(),this.game.setDefaultBoard(),this.drawUi(this.game.getBoard()))}getTileFromPoint(t,e){let r=document.elementFromPoint(t,e);if(!r)return;if(r.classList.contains("tile"))return r;let i=r.parentElement;return i.classList.contains("tile")?i:null}getTileFromDraggedPiece(){if(this.currentDraggedPiece)return Number(this.currentDraggedPiece.parentElement.id.replace("tile-",""))}addHighlight(t){let e=document.getElementById(`tile-${t}`);if(!e)throw new Error(`Invalid tile: ${t}`);let r=document.createElement("div");r.classList.add("highlighted"),e.getElementsByClassName("piece").length>0&&r.classList.add("highlighted-capture"),e.appendChild(r)}removeAllHighlights(){Array.from(document.getElementsByClassName("highlighted")).forEach(t=>t.remove())}};function H(){let c=new E;c.setDefaultBoard(),new I(c).start()}document.addEventListener("DOMContentLoaded",()=>H());})();
